version: '3.8'
services:
  event-stream:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event-stream
    ports:
      - "8083:8083"
    depends_on:
      - init-topic
    environment:
      BROKERS: kafka:9092
      TOPICS: expense-topic
      SCHEMAREGISTRY: kafka:8081  

  kafka:
    image: docker.vectorized.io/vectorized/redpanda:latest
    container_name: kafka
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --overprovisioned
      - --kafka-addr
      - "PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092"
      - --advertise-kafka-addr
      - "PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092"
      - --pandaproxy-addr
      - "0.0.0.0:8082"
      - --advertise-pandaproxy-addr
      - "localhost:8082"
    ports:
      - "8081:8081"
      - "8082:8082"
      - "9092:9092"
      - "29092:29092"
    environment:
      REDPANDA_AUTO_CREATE_TOPICS_ENABLED: "true"
      REDPANDA_DEFAULT_REPLICATION_FACTOR: "1"
      REDPANDA_LOG_LEVEL: "info"

  init-topic:
    build:
      context: ./docker
      dockerfile: Dockerfile.init_topic
    depends_on:
      - kafka  

  console:
    image: docker.redpanda.com/redpandadata/console:latest
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml && /app/console"
    container_name: console
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka:8081"]
    ports:
      - "8086:8080"
    depends_on:
      - kafka
